{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/suhaswagh/Downloads/ReactJs/CricKingdom/src/compnents/sliderpage.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Slider from 'react-animated-slider';\nimport 'react-animated-slider/build/horizontal.css'; // Comments have added for Code Explanation \n\nclass SliderPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPrice = async e => {\n      // Function to fetch API & Store Values\n      const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json'); // fetch API with Link\n\n      const json = await response.json(); // Converted Data to Json\n\n      this.setState({\n        Data: json.bpi\n      }); // Store Json Data to Data State\n\n      const {\n        Data\n      } = this.state; // this.State Declaration\n\n      this.setState({\n        currencyData: [\"Swipe up/down\", ...Object.keys(Data)]\n      }); // Craete & Store Object Keys Array with Custome Value to currencyData State\n    };\n\n    this._counter = e => {\n      // onSlideChange Function\n      const CurrencyName = e.slideIndex; // Value of current slider index in CurrencyName\n\n      this.setState({\n        currentCurrency: CurrencyName // Set current slider index to currentCurrency State\n\n      });\n      const {\n        CurrentRate,\n        Data,\n        currencyData,\n        currentCurrency\n      } = this.state; // this.State Declaration\n\n      const currentSlide = currencyData[this.state.currentCurrency]; // current Slide Array Item in currentSlide\n\n      if (currentCurrency === 0) {\n        // Statement for first array item\n        this.setState({\n          CurrentRate: 'Current Rate'\n        }); // Set initial Value\n\n        this.setState({\n          RateDis: 'Swipe below to see current rate'\n        }); // Set initial Value\n      }\n\n      if (currentCurrency > 0) {\n        // Statement for other array item\n        this.setState({\n          CurrentRate: Data[`${currentSlide}`].rate\n        });\n        this.setState({\n          RateDis: Data[`${currentSlide}`].description\n        });\n        this.setState({\n          Symbol: Data[`${currentSlide}`].symbol\n        });\n      }\n    };\n\n    this.state = {\n      Data: [],\n      // API DATA  \n      CurrentRate: 'Current Rate',\n      // Initial Value CurrentRate \n      RateDis: 'Swipe below to see current rate',\n      // Initial Value RateDis\n      currencyData: [],\n      // Object Keys as Array\n      currentCurrency: 0 // Current Currency Slide\n\n    };\n  }\n\n  componentDidMount() {\n    this.getPrice(); // Function Mount\n  }\n\n  render() {\n    const {\n      CurrentRate,\n      RateDis,\n      currencyData,\n      Symbol\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"priceBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"RateText\",\n          children: CurrentRate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"RateDis\",\n          children: RateDis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideBox\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          onSlideChange: e => this._counter(e),\n          children: currencyData.map((slide, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"itemBox\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: slide\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SliderPage;","map":{"version":3,"sources":["/Users/suhaswagh/Downloads/ReactJs/CricKingdom/src/compnents/sliderpage.js"],"names":["React","Component","Slider","SliderPage","constructor","props","getPrice","e","response","fetch","json","setState","Data","bpi","state","currencyData","Object","keys","_counter","CurrencyName","slideIndex","currentCurrency","CurrentRate","currentSlide","RateDis","rate","description","Symbol","symbol","componentDidMount","render","map","slide","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport Slider from 'react-animated-slider';\nimport 'react-animated-slider/build/horizontal.css';\n\n// Comments have added for Code Explanation \n\nclass SliderPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      Data: [],                                      // API DATA  \n      CurrentRate: 'Current Rate',                   // Initial Value CurrentRate \n      RateDis: 'Swipe below to see current rate',    // Initial Value RateDis\n      currencyData: [],                              // Object Keys as Array\n      currentCurrency: 0,                             // Current Currency Slide\n    };\n  }\n\n  componentDidMount() {\n    this.getPrice();                                 // Function Mount\n  };\n\n  getPrice = async (e) => {                          // Function to fetch API & Store Values\n    const response = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');  // fetch API with Link\n    const json = await response.json();              // Converted Data to Json\n    this.setState({ Data: json.bpi });               // Store Json Data to Data State\n    const { Data } = this.state;                     // this.State Declaration\n    this.setState({ currencyData: [\"Swipe up/down\", ...Object.keys(Data)] }); // Craete & Store Object Keys Array with Custome Value to currencyData State\n  };\n\n  _counter = (e) => {                                // onSlideChange Function\n    const CurrencyName = e.slideIndex;               // Value of current slider index in CurrencyName\n    this.setState({\n      currentCurrency: CurrencyName                  // Set current slider index to currentCurrency State\n    });\n\n    const { CurrentRate, Data, currencyData, currentCurrency } = this.state;  // this.State Declaration\n\n    const currentSlide = currencyData[this.state.currentCurrency];  // current Slide Array Item in currentSlide\n\n    if (currentCurrency === 0) {                     // Statement for first array item\n      this.setState({ CurrentRate: 'Current Rate' })  // Set initial Value\n      this.setState({ RateDis: 'Swipe below to see current rate' })  // Set initial Value\n    }\n    if (currentCurrency > 0) {                       // Statement for other array item\n      this.setState({ CurrentRate: Data[`${currentSlide}`].rate })\n      this.setState({ RateDis: Data[`${currentSlide}`].description })\n      this.setState({ Symbol: Data[`${currentSlide}`].symbol })\n    }\n  };\n\n  render() {\n\n    const { CurrentRate, RateDis, currencyData, Symbol } = this.state;\n\n    return (\n      <div>\n        <div className=\"priceBox\">\n          <h2 className=\"RateText\">{CurrentRate}</h2>\n          <p className=\"RateDis\">{RateDis}</p>\n        </div>\n        <div className=\"slideBox\">\n          <Slider onSlideChange={(e) => this._counter(e)}>\n            {currencyData.map((slide, index) => {\n              return (\n                <div key={index}>\n                  <div className=\"itemBox\">\n                    <h4>{slide}</h4>\n                  </div>\n                </div>)\n            })}\n          </Slider>\n        </div>\n      </div>\n\n    )\n  }\n}\n\n\nexport default SliderPage;\n"]},"metadata":{},"sourceType":"module"}